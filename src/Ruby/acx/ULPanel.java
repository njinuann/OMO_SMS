/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * PALogin.java
 *
 * Created on Feb 19, 2012, 3:48:23 PM
 */
package Ruby.acx;

import Ruby.APController;
import Ruby.APMain;
import Ruby.model.AXUser;
import java.awt.EventQueue;
import javax.swing.text.AbstractDocument;

/**
 *
 * @author Pecherk
 */
public final class ULPanel extends javax.swing.JPanel
{
    private String module, role;
    private static AXUser user = new AXUser();
    private static final ATBox box = new ATBox(APMain.acxLog);

    /**
     * Creates new form EILogin
     */
    public ULPanel()
    {
        initComponents();
        initDialog();
    }

    public void initDialog()
    {
        loginDialog.setContentPane(this);
        loginDialog.pack();
        loginDialog.setResizable(false);
        loginDialog.setLocationRelativeTo(APMain.apFrame);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        loginDialog = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        userIdField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        loginDialog.setIconImage(APMain.getIconImage());
        loginDialog.setModal(true);
        loginDialog.setName("loginDialog"); // NOI18N

        javax.swing.GroupLayout loginDialogLayout = new javax.swing.GroupLayout(loginDialog.getContentPane());
        loginDialog.getContentPane().setLayout(loginDialogLayout);
        loginDialogLayout.setHorizontalGroup(
            loginDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        loginDialogLayout.setVerticalGroup(
            loginDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jLabel1.setText("UserName");

        userIdField.setSelectionColor(java.awt.Color.red);
        ((AbstractDocument) userIdField.getDocument()).setDocumentFilter(new UCFilter());
        userIdField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                userIdFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Password");

        passwordField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                passwordFieldActionPerformed(evt);
            }
        });

        loginButton.setText("Login");
        loginButton.setToolTipText("Login");
        loginButton.setFocusable(false);
        loginButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                loginButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.setToolTipText("Cancel");
        cancelButton.setFocusable(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelButtonActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userIdField, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                    .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(userIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loginButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addComponent(cancelButton))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_loginButtonActionPerformed
    {//GEN-HEADEREND:event_loginButtonActionPerformed
        // TODO add your handling code here:
        loginUser();
    }//GEN-LAST:event_loginButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
    {//GEN-HEADEREND:event_cancelButtonActionPerformed
        hideDialog();
        setUser(new AXUser());
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void hideDialog()
    {
        EventQueue.invokeLater(()
                -> 
                {
                    loginDialog.setVisible(false);
                    passwordField.setText("");
        });
    }

    private void userIdFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_userIdFieldActionPerformed
    {//GEN-HEADEREND:event_userIdFieldActionPerformed
        // TODO add your handling code here:
        loginUser();
    }//GEN-LAST:event_userIdFieldActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_passwordFieldActionPerformed
    {//GEN-HEADEREND:event_passwordFieldActionPerformed
        // TODO add your handling code here:
        loginUser();
    }//GEN-LAST:event_passwordFieldActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton loginButton;
    public javax.swing.JDialog loginDialog;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField userIdField;
    // End of variables declaration//GEN-END:variables

    private String getUserID()
    {
        return userIdField.getText();
    }

    private String getPassword()
    {
        return String.valueOf(passwordField.getPassword());
    }

    private void showDialog()
    {
        setUser(new AXUser());
        loginDialog.setTitle("Admin Login [ " + getModule() + " ]");
        loginDialog.setIconImage(APMain.getIconImage());
        loginDialog.setVisible(true);
    }

    public boolean isUserAdmin(String module, String role)
    {
        setRole(role);
        setModule(module);
        showDialog();
        return getUser().getRoles().contains(role);
    }

    private void loginUser()
    {
        if (passwordField.getPassword().length == 0)
        {
            passwordField.requestFocus();
        }
        else if (userIdField.getText().length() == 0)
        {
            userIdField.requestFocus();
        }
        else
        {
            userIdField.setEnabled(false);
            passwordField.setEnabled(false);

            setUser(getBox().getdClient().loginAdminUser(getUserID(), getPassword(), getRole()));
            APMain.acxLog.logEvent(APController.getWorker().isBlank(getUser().getUserNumber()) ? "Login failed. User [ " + getUserID() + " ], Module [ " + getModule() + " ]" : "Login successful. User [ " + getUserID() + " ], Name [ " + getUser().getStaffName() + " ], Module [ " + getModule() + " ]");

            passwordField.setEnabled(true);
            userIdField.setEnabled(true);

            if (getUser().getRoles().contains(getRole()))
            {
                hideDialog();
            }
            else
            {
                userIdField.setText(APController.getWorker().isBlank(getUser().getStaffName()) ? "Login Failed!" : "Access Denied!");
                passwordField.setText("");

                userIdField.requestFocus();
                userIdField.selectAll();
            }
        }
    }

    /**
     * @return the role
     */
    public String getRole()
    {
        return role;
    }

    /**
     * @param role the role to set
     */
    public void setRole(String role)
    {
        this.role = role;
    }

    /**
     * @return the module
     */
    public String getModule()
    {
        return module;
    }

    /**
     * @param module the module to set
     */
    public void setModule(String module)
    {
        this.module = module;
    }

    /**
     * @return the user
     */
    public static AXUser getUser()
    {
        return user;
    }

    /**
     * @param usr
     */
    public void setUser(AXUser usr)
    {
        user = usr;
    }

    /**
     * @return the box
     */
    public static ATBox getBox()
    {
        return box;
    }
}
